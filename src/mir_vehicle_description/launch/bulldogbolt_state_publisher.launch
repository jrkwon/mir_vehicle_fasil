<?xml version="1.0"?>
<launch>
  
<arg name="robot_name" default="bulldogbolt"/>

<arg name="paused" default="false"/>
<arg name="use_sim_time" default="true"/>
<arg name="gui" default="true"/>
<arg name="recording" default="false"/>
<arg name="debug" default="false"/>

<!-- change these defaults here, or as a cmd line arg, in order to turn off   -->
<!--   sensors that you aren't using, thus freeing up computational resources -->
<!--   and reducing storage space for your bagfiles -->
<arg name="front_laser_points" default="true"/>
<arg name="velodyne_points" default="true"/>
<arg name="camera_right" default="true"/>
<arg name="camera_left" default="true"/>
<!-- change these defaults here, to see further left with the velodyne   -->
<arg name="velodyne_max_angle" default="0.4"/>
<!-- change these defaults here, to see further right with the velodyne   -->
<arg name="velodyne_min_angle" default="-0.4"/>

<!-- RViz -->

<group ns="$(arg robot_name)">

    <!-- arg name="config_file" value="$(arg robot_name)_control.yaml"/ -->

    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find mir_vehicle_description)/urdf/$(arg robot_name)/main.urdf.xacro robot_name:='$(arg robot_name)' front_laser_points:='$(arg front_laser_points)' velodyne_points:='$(arg velodyne_points)' camera_right:='$(arg camera_right)' camera_left:='$(arg camera_left)' velodyne_max_angle:='$(arg velodyne_max_angle)' velodyne_min_angle:='$(arg velodyne_min_angle)'" />
    <param name="use_gui" value="$(arg gui)"/>
    <param name="tf_prefix" value="$(arg robot_name)"/>

    <!-- convert joint states to TF transforms for rviz, etc -->
    <node name="robot_state_publisher_$(arg robot_name)" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
        <remap from="/joint_states" to="/$(arg robot_name)/joint_states" />
    </node>


    <!-- need for publishing joint states that are not controlled -->
    <node name="joint_state_publisher_$(arg robot_name)" pkg="joint_state_publisher" type="joint_state_publisher" respawn="false" output="screen">
        <remap from="/joint_states" to="/$(arg robot_name)/joint_states" />
    </node>

    <!-- set up a static TF transform for publishing SLAM localization estimates wrt base_link -->
    <node pkg="tf" type="static_transform_publisher" name="base_link2slamodom_tf_$(arg robot_name)" 
        args="0 0 0 0 0 0 $(arg robot_name)/base_link $(arg robot_name)/slamodom 5" />

    <arg name="rvizconfig" default="$(find mir_vehicle_description)/launch/$(arg robot_name)_state_publisher.rviz" />
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" required="true" />

</group>

</launch>
